[{"/Users/alexis/Desktop/React/React-goalList/src/index.js":"1","/Users/alexis/Desktop/React/React-goalList/src/App.js":"2","/Users/alexis/Desktop/React/React-goalList/src/components/CourseGoals/CourseGoalList/CourseGoalList.js":"3","/Users/alexis/Desktop/React/React-goalList/src/components/CourseGoals/CourseInput/CourseInput.js":"4","/Users/alexis/Desktop/React/React-goalList/src/components/CourseGoals/CourseGoalItem/CourseGoalItem.js":"5","/Users/alexis/Desktop/React/React-goalList/src/components/UI/Button/Button.js":"6"},{"size":169,"mtime":1616593574000,"results":"7","hashOfConfig":"8"},{"size":1533,"mtime":1616593574000,"results":"9","hashOfConfig":"8"},{"size":461,"mtime":1616593574000,"results":"10","hashOfConfig":"8"},{"size":1642,"mtime":1639383136380,"results":"11","hashOfConfig":"8"},{"size":393,"mtime":1616593574000,"results":"12","hashOfConfig":"8"},{"size":774,"mtime":1639382242970,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ouxqbh",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexis/Desktop/React/React-goalList/src/index.js",[],"/Users/alexis/Desktop/React/React-goalList/src/App.js",[],"/Users/alexis/Desktop/React/React-goalList/src/components/CourseGoals/CourseGoalList/CourseGoalList.js",[],"/Users/alexis/Desktop/React/React-goalList/src/components/CourseGoals/CourseInput/CourseInput.js",["27"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../UI/Button/Button';\nimport styles from './CourseInput.module.css';\n\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${props => (props.invalid ? \"red\" : \"black\")};\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n//     border: 1px solid ${props => (props.invalid ? \"red\" : \"#ccc\")};\n//     background: ${props => (props.invalid ? \"#fad0ec\" : \"transparent\")};\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0){\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0){\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={`${styles[\"form-control\"]} ${!isValid && styles.invalid}`} >\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n","/Users/alexis/Desktop/React/React-goalList/src/components/CourseGoals/CourseGoalItem/CourseGoalItem.js",[],"/Users/alexis/Desktop/React/React-goalList/src/components/UI/Button/Button.js",[],{"ruleId":"28","severity":1,"message":"29","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":14},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar"]